<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_method___tools on DevFest du Bout du Monde 2020</title>
    <link>https://devfest.duboutdumonde.bzh/tags/_method___tools/</link>
    <description>Recent content in _method___tools on DevFest du Bout du Monde 2020</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    
	<atom:link href="https://devfest.duboutdumonde.bzh/tags/_method___tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Are you interesting to manage your passwords like your code ? Come and discover how !</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/are_you_interesting_to_manage_your_passwords_like_your_code___come_and_discover_how/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/are_you_interesting_to_manage_your_passwords_like_your_code___come_and_discover_how/</guid>
      <description>La gestion de mot de passe est une partie bien-souvent douloureuse, voir fastidieuse.
Qui a raison? L‚Äôinformations qui est en prod ou bien celle du Keepass, ou encore celle que l‚Äôon croit avoir configur√© ?
Le d√©veloppement en collaboration est d√©sormais beaucoup plus ais√© depuis des outils comme SVN et d√©sormais l‚Äôincontournable GIT, projet initi√© par Linus Torvald !
Mais alors pourquoi pas g√©rer nos mots de passe comme du code ?</description>
    </item>
    
    <item>
      <title>Compiler-Driven-Onboarding - open source in elm</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/compiler_driven_onboarding___open_source_in_elm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/compiler_driven_onboarding___open_source_in_elm/</guid>
      <description>De la premi√®re &amp;ldquo;good first issue&amp;rdquo; r√©solue jusqu&amp;rsquo;√† une PR cons√©quente, je raconterai comment j&amp;rsquo;ai int√©gr√© le projet open source elm-in-elm (https://github.com/elm-in-elm/compiler).
En suivant pas √† pas mon exp√©rience, nous verrons comment : * simplifier des tests ; * ajouter de nouvelles de fonctionnalit√©s sans se perdre dans le code ; * √©viter un bug sournois avant m√™me de compiler ; * d√©tecter un bug alors que &amp;ldquo;tout semble marcher&amp;rdquo; ; * modifier le code pour que les nouveaux contributeurs ne tombent pas dans le m√™me pi√®ge que moi ; * aider les nouveaux contributeurs √† participer au projet.</description>
    </item>
    
    <item>
      <title>Eliminez rapidement des bottlenecks de performance avec QuickPerf</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/eliminez_rapidement_des_bottlenecks_de_performance_avec_quickperf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/eliminez_rapidement_des_bottlenecks_de_performance_avec_quickperf/</guid>
      <description>Supposons que vous d√©veloppiez une application en Java : comment d√©tecter rapidement la pr√©sence d&amp;rsquo;importants goulots d&amp;rsquo;√©tranglement de performance (bottlenecks) ? Comment savoir rapidement que le code nouvellement √©crit va g√©n√©rer de multiples requ√™tes SQL ? Comment se rendre compte rapidement que votre application va consommer √©norm√©ment de m√©moire ? Nous allons montrer comment la librairie de test QuickPerf peut vous aider √† r√©pondre √† ces questions.</description>
    </item>
    
    <item>
      <title>Functional programming - l&#39;architecture du choix</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/functional_programming___l_architecture_du_choix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/functional_programming___l_architecture_du_choix/</guid>
      <description>&amp;ldquo;La programmation fonctionnelle, c&amp;rsquo;est trop compliqu√© !&amp;rdquo;
Cette phrase, je l‚Äôai entendue je ne sais combien de fois. Mais pourquoi autant de r√©ticence ?
Depuis quelques ann√©es √©merge de nombreux talks d‚Äôintroduction √† la programmation fonctionnelle mais la r√©alit√© reste qu‚Äôil s‚Äôagit d‚Äôune pratique marginale sur l‚Äôensemble des d√©veloppements.
Les raisons √©voqu√©es sont souvent les m√™mes, tels des st√©r√©otypes :
 Le temps d‚Äôapprentissage Le jargon qui fait peur Les concepts math√©matiques &amp;hellip;  Et si le probl√®me n‚Äô√©tait pas dans la mani√®re dont on explique la programmation fonctionnelle mais plut√¥t comment cette pratique est introduite dans le quotidien d&amp;rsquo;une √©quipe ?</description>
    </item>
    
    <item>
      <title>GraalVM- la VM polyglotte</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/graalvm__la_vm_polyglotte/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/graalvm__la_vm_polyglotte/</guid>
      <description>‚ÄúCette librairie n&amp;rsquo;est pas disponible dans mon langage de programmation. Je dois la r√©√©crire.&amp;ldquo;
&amp;ldquo;Ce langage conviendrait parfaitement √† mon probl√®me, mais nous ne pouvons pas l&amp;rsquo;ex√©cuter dans notre environnement.&amp;ldquo;
&amp;ldquo;Ce probl√®me est d√©j√† r√©solu dans tel ou tel langage, mais ce langage est trop lent.&amp;ldquo;
Oyez , oyez D√©veloppeurs! Plus d‚Äôinqui√©tude, GraalVM arrive √† la rescousse!</description>
    </item>
    
    <item>
      <title>Les risques de la revue de code</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/les_risques_de_la_revue_de_code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/les_risques_de_la_revue_de_code/</guid>
      <description>Je suis un d√©veloppeur qui n&amp;rsquo;aime pas la revue de code, et je vais vous expliquer tout le mal que j&amp;rsquo;en pense.
Cette pr√©sentation courte et humoristique n&amp;rsquo;est faite que de mauvaise foi. C&amp;rsquo;est une d√©monstration par l&amp;rsquo;absurde des int√©r√™ts de la revue de code. En mettant les rieurs de mon c√¥t√©, je vais les convaincre qu&amp;rsquo;ils peuvent ainsi am√©liorer les pratiques de d√©veloppement et la collaboration au sein de leurs √©quipes.</description>
    </item>
    
    <item>
      <title>Monitorer ses APIs √† partir de z√©ro, viser l&#39;au-del√†, et la dimension business</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/monitorer_ses_apis_a_partir_de_zero__viser_l_au_dela__et_la_dimension_business/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/monitorer_ses_apis_a_partir_de_zero__viser_l_au_dela__et_la_dimension_business/</guid>
      <description>Initialement abord√© sous un angle technique, le monitoring d&amp;rsquo;API gagne √† √©voluer en maturit√© pour devenir pourvoyeur d&amp;rsquo;informations √† caract√®re strat√©gique. Dans un contexte de d√©ploiement d&amp;rsquo;APIs REST, cette pr√©sentation passera en revue diff√©rentes fa√ßons de monitorer des APIs. Sans avoir la pr√©tention d&amp;rsquo;√™tre exhaustif sur les techniques √† mettre en ≈ìuvre, nous montrerons que le choix des m√©triques est crucial, tout autant que l&amp;rsquo;exploitation qui est en faite. Ainsi, la collecte de m√©triques ne sera plus uniquement un enjeu IT, mais √©galement business dans une d√©marche d&amp;rsquo;am√©lioration de l&amp;rsquo;exp√©rience client.</description>
    </item>
    
    <item>
      <title>Retour vers le java.util.concurrent.Future...</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/retour_vers_le_java_util_concurrent_future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/retour_vers_le_java_util_concurrent_future/</guid>
      <description>La programmation r√©active, tout le monde en parle, l‚Äôavez vous vraiment cern√©e ?
Nous d√©velopperons une application traitant des events.
Vous avez envie de la d√©velopper de mani√®re r√©active. Nom de zeus ! Nous sommes revenus √† l‚Äô√©poque de l‚Äôimp√©ratif. Pour √©viter les paradoxes spatio-temporels nous devrons voyager √† travers les √©poques.
Imp√©ratif, callback hell, bloquant, c‚Äôest pas le pied&amp;hellip;
Sous le capot, vous appr√©henderez les avantages et inconv√©nients des diff√©rents paradigmes.</description>
    </item>
    
    <item>
      <title>Trucs et astuces pour consommer une API REST</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/trucs_et_astuces_pour_consommer_une_api_rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/trucs_et_astuces_pour_consommer_une_api_rest/</guid>
      <description>Consommer une API REST fait d√©sormais partie de notre quotidien de d√©veloppeur. Que ce soit pour appeler un composant de notre belle architecture micro-services, un service externe h√©berg√© par un tiers, r√©aliser un appel HTTP est plus que courant dans nos applications. Nous avons √† disposition pl√©thore de ressources pour bien concevoir son API REST mais comment faisons-nous pour en consommer une de mani√®re efficace ?
 Cela commence souvent par la d√©couverte d&amp;rsquo;une nouvelle API.</description>
    </item>
    
    <item>
      <title>Vous livrez encore des bugs en prod ?! üò±</title>
      <link>https://devfest.duboutdumonde.bzh/sessions/vous_livrez_encore_des_bugs_en_prod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devfest.duboutdumonde.bzh/sessions/vous_livrez_encore_des_bugs_en_prod/</guid>
      <description>Le stagiaire a encore frapp√© ! C&amp;rsquo;√©tait pourtant simple de passer le montant de la transaction en premier argument et le timestamp en second, non ? Et du coup, vous avez un probl√®me √† 1530795303‚Ç¨&amp;hellip;
Mais&amp;hellip; est-ce vraiment sa faute ? Est-ce qu&amp;rsquo;on n&amp;rsquo;aurait pas d√ª emp√™cher que cette erreur puisse m√™me se produire ?
Je vous affirme au contraire qu&amp;rsquo;il est de notre devoir de viser le z√©ro bugs !</description>
    </item>
    
  </channel>
</rss>